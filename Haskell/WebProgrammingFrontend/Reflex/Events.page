---
toc: no
...

# Reflex Events

## Data Type

### Basics

* Events are Functors
* Events can be shown when the type *a* is an instance of *show*

## Conversion Functions

### tag: Replace the value of an Event with the value of a Behavior

Usage: Add data to a button click event

~~~ { .haskell }
-- | Replace each occurrence value of the 'Event' with the value of the
-- 'Behavior' at the time of that occurrence.
tag :: Reflex t => Behavior t b -> Event t a -> Event t b

~~~

### tagDyn: Replace the value of an Event with the value of a Behavior

~~~ { .haskell }
-- | Replace the value of the Event with the current value of the Dynamic each time the Event occurs.
tagDyn :: Reflex t => Dynamic t a -> Event t b -> Event t a 
~~~

Note:  `tag (current d) e` is preferred.