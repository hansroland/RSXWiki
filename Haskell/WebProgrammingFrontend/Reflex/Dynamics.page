---
toc: no
...

# Dynamic

A container for a value that can change over time and allows
notifications on changes.  Basically a combination of a 'Behavior' and an
'Event', with a rule that the 'Behavior' will change if and only if the
'Event' fires.

~~~ { .haskell }
data Dynamic t :: * -> *
~~~
 


## Conversion functions

### current - Extract the Behavior of a Dynamic
~~~ { .haskell }
  current :: Dynamic t a -> Behavior t a
~~~

### updated - Extract the Event of the 'Dynamic'.
~~~ { .haskell }
  updated :: Dynamic t a -> Event t a
~~~
 

### tagDyn: Replace the value of an Event with the value of a Behavior

~~~ { .haskell }
-- | Replace the value of the Event with the current value of the Dynamic each time the Event occurs.
tagDyn :: Reflex t => Dynamic t a -> Event t b -> Event t a 
~~~

Note:  `tag (current d) e` is preferred.