---
toc: no
...

# GHC Hacking Workflow

### Update the source tree

~~~
cd ~/Projekte/ghc
git checkout master
git pull upstream master --recurse-submodules=yes
git submodule update --init

# Push back changes to personal Gitlab account
git push origin master

# For every working branch do 
git checkout <branch>
git submodule update --init
git rebase master
~~~

### Full build after updating master

~~~
hadrian full
~~~

### Difference build after code changes

~~~
hadrian
~~~


### Testing 

Test your testcase:

~~~
hadrian test <T12345>
~~~

### Sending a PR to gitlab.haskell.org

~~~
git checkout <branch>
git pull origin <branch>
git push origin <branch>
~~~

### Fixing the Patch

* Work on the same branch
* Squash all commits to one single commit

### Squashing multiple commits

* close `code` editor and `gitg` (They block a file used by git-squash)
* count the numbers of commits to squash

```
git rebase -i HEAD~n       (n is the number of commits to squash)
```

* In the editor:
* use `pick` on the first/top commit.
* Adapt commit message on the first/top commit
* change `pick`s on following lines to `fixup`
* close editor
* use --force to push to origin

```
git push --force origin <remote-branch>
```


