---
toc: no
...

# GHC Hacking Workflow

### Update the source tree

~~~
cd ~/Projekte/ghc
git checkout master
git pull upstream master --recurse-submodules=yes
git submodule update --init

# Push back changes to personal Gitlab account
git push origin master

# For every working branch do 
git checkout <branch>
git rebase master
~~~

### Prepare build after updating master

~~~
# Check mk/build.mk
 - BuildFlavour = devel2  must be activated
 - stage=2                must be deactivated 

./boot
./configure
make -j4 

# After successful build
 - Activate again stage=2 in mk/build.mk
~~~

### Build 

~~~
make -j4 
~~~



### Working 

Create a git branch!

### Testing 

Test your testcase:

~~~
cd ~/Projekte/ghc/testsuite

make TEST=T99999
~~~

### Sending a PR to gitlab.haskell.org

~~~
git checkout <branch>
git pull origin <branch>
git push origin <branch>
~~~


### Sending PR to Phabricator

* git checkout <my-branch>
* arc diff 
* Possible reviewers: mpickering  bgamari  thomie  ezyang, RyanGlScott
* Add link from Phabricator to a comment 
* Fill out the following fields in the ticket: 
  - Status: patch
  - Testcase: <???????>
  - Differential Revs: Phab: D9999

### Fixing the Patch

* Work on the same branch
* Again use: arc diff